name: Side Project Workflow

on:
  workflow_dispatch:
    inputs:
      aws_account_id:
        description: AWS Account ID
        type: string  
      tag_name:
        type: string 
        description: tag name
jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      image_tag: ${{ steps.build-publish.outputs.image_tag }}
      full_image: ${{ steps.build-publish.outputs.full_image }}
      application_applied: ${{ steps.apply-application.outputs.application_applied }}   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update application version in application.properties
        shell: bash
        run: |
          sed -i "s/app.version=.*/app.version=${{ inputs.tag_name }}/" src/main/resources/application.properties
          echo "Updated application.properties with version ${{ inputs.tag_name }}"

      - name: Update Chart.yaml appVersion
        shell: bash
        run: |
          sed -i 's/appVersion: .*/appVersion: "${{ inputs.tag_name }}"/' side-project-chart/Chart.yaml
          echo "Updated Chart.yaml with appVersion ${{ inputs.tag_name }}"

      - name: Update values.yaml image tag
        shell: bash
        run: |
          sed -i 's/tag: .*/tag: "${{ inputs.tag_name }}"/' side-project-chart/values.yaml
          echo "Updated values.yaml with image tag ${{ inputs.tag_name }}"

      - name: Commit and push version updates
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add src/main/resources/application.properties side-project-chart/Chart.yaml side-project-chart/values.yaml
          git diff --cached --quiet || git commit -m "chore: bump version to ${{ inputs.tag_name }}"
          git push

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::256344107989:role/GitHubActionsRole
          aws-region: il-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries:  ${{ inputs.aws_account_id }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push multi-arch image to Amazon ECR
        id: build-publish
        shell: bash
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: side-project-test
          IMAGE_TAG: ${{ inputs.tag_name }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
            -t "$ECR_REGISTRY/$ECR_REPOSITORY:latest" \
            .
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

#      - name: Configure kubectl for EKS
#        shell: bash
#        run: |
#          aws eks update-kubeconfig --name side-project-eks --region il-central-1
#          kubectl get nodes
#
#      - name: apply application to ArgoCD
#        id: apply-application
#        shell: bash
#        run: |
#          kubectl apply -f argocd/application.yaml
#          echo "Application is applied to ArgoCD"
